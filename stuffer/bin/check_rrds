#!/usr/bin/env perl -w

# Copyright (C) 2008 Board of Regents of the University System of Georgia

# This file is part of YaketyStats (see http://yaketystats.org/).
#
# YaketyStats is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2.
#
# YaketyStats is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with YaketyStats.  If not, see <http://www.gnu.org/licenses/>.

use strict;
use warnings;
use RRDs;

$|=1;

my $dir = "/rrd";
my (@rrds, @detail, %hosts, $host);
my $toolong = 60 * 60;

# Collect all the rrd files
dodir ($dir);
checkem ($dir, @rrds);
print "These hosts have RRD files which haven't been updated in a while:\n";
foreach $host (keys (%hosts)) {
  printf "%-30s %10d minutes\n", $host, $hosts{$host}{mins};
}

print "\n\nHere's a detailed list:\n";
print @detail;

sub dodir {
  my ($dir) = @_;
  my ($entry);
  local *D;

  opendir (D, $dir) || die "can't open $dir";
  LOOP: while ( $entry = readdir (D) ) {
    if ( $entry =~ /^[.]/ ) {
      next LOOP;
    }
    $entry = "$dir/$entry";
    if ( -d $entry ) {
      dodir ($entry);
    } else {
      if ( $entry =~ /rrd$/ ) {
        push (@rrds, $entry);
      }
    }
  }
}

sub checkem {
  my ($dir, @list) = @_;
  my ($f, $time, $now, $host, $mins);

  $now = time ();
  foreach $f (@list) {
    $time = RRDs::last ($f);
    if ( $now - $time > $toolong ) {
      $mins = int (($now - $time) /60);
      push (@detail, "It's been $mins minutes since $f was updated.\n");
      $host = $f;
      $host =~ s/$dir\/([^\/]*).*/$1/;
      $hosts{$host}{'long'} = 1;
      if ( !defined ($hosts{$host}{'mins'}) || $mins < $hosts{$host}{'mins'} ) {
        $hosts{$host}{'mins'} = $mins
      }
    }
  }
}

#!/usr/bin/perl

# Copyright (C) 2008 Board of Regents of the University of Georgia

# This file is part of YaketyStats (see http://yaketystats.org/).
#
# YaketyStats is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 2.
#
# YaketyStats is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with YaketyStats.  If not, see <http://www.gnu.org/licenses/>.

$|=1;

use strict;
use warnings;
use Cwd 'realpath';
our $g_dir = __FILE__;
$g_dir =~ s/\/[^\/]+$//;
$g_dir = realpath("$g_dir/..");
require "$g_dir/lib/include";

my (@data, $line);

# These are the defaults.  They could be semi-overridden by specifying a
# different interval in the client config file, but the RRD file would still have
# space for updates every $interval as defined below.
my $rrd_type = "GAUGE";
my $rrd_interval;

our ($g_default_timeout, $g_host, $g_sep, $g_collector, $g_os);
$main::g_host = get_hostname ();
$main::g_collector = 'net_sockets';

# If we haven't loaded subs.pl, then we've been run from the command-line.  That
# means we're in test mode.  So load include, define $g_host, and print results.
if (! defined (@ARGV) || (! defined ($ARGV[1]) && $ARGV[1] eq "calledfromcollect") ) {
  # TODO: There must be a better way to get this path!  I think the better
  # way is called "perl module" :)
  local $main::g_fileit_mode = "test";
  # Silence warning
  $main::g_fileit_mode = $main::g_fileit_mode;
  get_ignores ();
  $rrd_interval = 60;
  fileit ("You ran $g_collector manually; setting interval to $rrd_interval.");
  @data = doit ();
  foreach my $line (@data) {
    print "$line";
  }
  print "\n";
} else {
  if ( defined ($ARGV[0]) && $ARGV[0] =~ /^\d+$/ ) {
    $rrd_interval = $ARGV[0];
  } else {
    fileit ("Ack!  No interval for $g_collector.  Bailing.");
    exit ();
  }
  get_ignores ();
  @data = doit ();
  if ( defined ($data[0]) ) {
    bivalve (@data);
  } else {
    fileit ("Warning:  No data for $g_collector");
  }
}

# netstat -f inet -a -P tcp -n | egrep -v '^TCP:|Local Address' |sed 's/[^A-Z]//g' | grep -v '^$' | sort | uniq -c
# 1 BOUND
# 454 ESTABLISHED
# 20 FINWAIT
# 2 IDLE
# 21 LISTEN
# 2 SYNSENT
# 16 TIMEWAIT

# Solaris:
# 
# TCP: IPv4
#    Local Address        Remote Address    Swind Send-Q Rwind Recv-Q  State
# -------------------- -------------------- ----- ------ ----- ------ -------
#       *.*                  *.*                0      0 49152      0 IDLE
#       *.111                *.*                0      0 49152      0 LISTEN
#       *.*                  *.*                0      0 49152      0 IDLE
#       *.5555               *.*                0      0 49152      0 LISTEN
#       *.5666               *.*                0      0 49152      0 LISTEN
#       *.32772              *.*                0      0 49152      0 LISTEN
#       *.4045               *.*                0      0 49152      0 LISTEN
#       *.22                 *.*                0      0 49152      0 LISTEN
#       *.22                 *.*                0      0 49152      0 LISTEN
# 127.0.0.1.25               *.*                0      0 49152      0 LISTEN
#       *.587                *.*                0      0 49152      0 LISTEN
#       *.1234               *.*                0      0 49152      0 LISTEN
#       *.1234               *.*                0      0 49152      0 LISTEN
#       *.6001               *.*                0      0 49152      0 LISTEN
# 168.24.81.63.22      168.24.82.64.55442   34256      0 48032      0 ESTABLISHED
# 127.0.0.1.6011             *.*                0      0 49152      0 LISTEN
# 168.24.81.63.22      168.24.82.64.45859   16912      0 48144      0 ESTABLISHED
#       *.39658              *.*                0      0 49152      0 BOUND
# 168.24.81.63.39661   168.24.81.86.8088    49001      0 49640      0 ESTABLISHED
# 168.24.81.63.39663   168.24.81.86.8088    48511      0 49640      0 ESTABLISHED
#       *.39740              *.*                0      0 49152      0 LISTEN
# 168.24.81.63.39742   168.24.80.70.8834    49640      0 49131      0 ESTABLISHED
# 168.24.81.63.39744   168.24.80.70.8834    49640      0 48888      0 ESTABLISHED
# 168.24.81.63.39745   168.24.80.70.8834    49640      0 49424      0 ESTABLISHED
# 168.24.81.63.39746   168.24.80.70.8834    49640      0 49058      0 ESTABLISHED
#
# Linux:
# netstat -an --inet --tcp
# Active Internet connections (servers and established)
# Proto Recv-Q Send-Q Local Address           Foreign Address         State      
# tcp        0      0 0.0.0.0:514             0.0.0.0:*               LISTEN     
# tcp        0      0 0.0.0.0:5666            0.0.0.0:*               LISTEN     
# tcp        0      0 0.0.0.0:199             0.0.0.0:*               LISTEN     
# tcp        0      0 127.0.0.1:3306          0.0.0.0:*               LISTEN     
# tcp        0      0 0.0.0.0:3307            0.0.0.0:*               LISTEN     
# tcp        0      0 0.0.0.0:111             0.0.0.0:*               LISTEN     
# tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN     
# tcp        0      0 0.0.0.0:5555            0.0.0.0:*               LISTEN     
# tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN     
# tcp        0      0 0.0.0.0:25              0.0.0.0:*               LISTEN     
# tcp        0      0 127.0.0.1:6010          0.0.0.0:*               LISTEN     
# tcp        0      0 0.0.0.0:443             0.0.0.0:*               LISTEN     
# tcp        0      0 127.0.0.1:6011          0.0.0.0:*               LISTEN     
# tcp        0      0 168.24.129.22:5666      168.24.80.67:59281      ESTABLISHED
#
# HP-UX
# netstat -an -f inet
# Active Internet connections (including servers)Proto Recv-Q Send-Q  Local Address          Foreign Address        (state)
# tcp        0      0  *.10222                *.*                     LISTEN
# tcp        0      0  *.4045                 *.*                     LISTEN
# tcp        0      0  *.6010                 *.*                     LISTEN
# tcp        0      0  *.1788                 *.*                     LISTEN
# tcp        0      0  *.5798                 *.*                     LISTEN
# tcp        0      0  127.0.0.1.5798         127.0.0.1.52122         ESTABLISHED
# tcp        0      0  127.0.0.1.5798         127.0.0.1.52124         ESTABLISHED
# tcp        0      0  127.0.0.1.5798         127.0.0.1.52126         ESTABLISHED
# tcp        0     88  198.72.68.12.5798      168.24.80.30.3399       ESTABLISHED
# tcp        0      0  *.5666                 *.*                     LISTEN
# tcp        0      0  *.1508                 *.*                     LISTEN
# tcp        0      0  *.5555                 *.*                     LISTEN
# tcp        0      0  198.72.68.12.58709     10.0.2.15.22            ESTABLISHED
# tcp        0      0  198.72.68.12.50501     10.0.2.10.22            ESTABLISHED

sub doit {
  my ($cmd, $status, @data, $line, $socket, @return, $time, %sockets);

  $cmd = get_path ('netstat');
  $time = time ();

  if ( $g_os eq "linux" ) {
    $cmd = "$cmd -an --inet --tcp";
  } else {
    if ( $g_os eq "hpux" ) {
      $cmd = "$cmd -an -f inet";
    } else {
      if ( $g_os eq "solaris" ) {
	$cmd = "$cmd -f inet -a -P tcp -n";
      } else {
	fileit ("unknown os: $g_os");
	return (undef);
      }
    }
  }
  ($status, @data) = run_prg ($cmd, $g_default_timeout);
  if ( $status != 0 ) {
    fileit ("Bad status for $cmd:  $status.  Output was:  @data\n");
    return (undef);
  }
  # Solaris:
  # TCP: IPv4
  #    Local Address        Remote Address    Swind Send-Q Rwind Recv-Q  State
  # -------------------- -------------------- ----- ------ ----- ------ -------
  #       *.*                  *.*                0      0 49152      0 IDLE
  #
  # Linux:
  # netstat -an --inet --tcp
  # Active Internet connections (servers and established)
  # Proto Recv-Q Send-Q Local Address           Foreign Address         State      
  # tcp        0      0 0.0.0.0:514             0.0.0.0:*               LISTEN     
  #
  # HP-UX
  # netstat -an -f inet
  # Active Internet connections (including servers)Proto Recv-Q Send-Q  Local Address          Foreign Address        (state)
  # tcp        0      0  *.10222                *.*                     LISTEN


  foreach $line (@data) {
    if ( $line !~ /^TCP/ &&
	 $line !~ /Local Address/ &&
         $line !~ /^$/ &&
	 $line !~ /---/ &&
	 $line !~ /connections/ &&
	 $line !~ /Proto/ &&
	 $line !~ /---/ ) {
      $line =~ s/[^A-Z]//g;
      $line =~ s/tcp//;
      if ( $line !~ /^$/ ) {
        $sockets{$line}++;
      }
    }
  }

  foreach $socket (keys (%sockets)) {
    if ( ! ignoreit ('net_sockets', $socket) ) {
      push (@return, "p=/$main::g_host/net/sockets/$socket${g_sep}t=$rrd_type${g_sep}i=$rrd_interval${g_sep}ts=$time${g_sep}v=$sockets{$socket}\n");
    }
  }
  return (@return);
}

1;

#!/bin/bash

# Surely you'll need to fix $hostname and $f

sep=''
ago='1 hour ago'
hostname=$(hostname)

if [[ "$1" -ne "" ]]
then
  mon="$1"
  day="$2"
  hour="$3"
  ago="$mon/$day/2009 $hour:00"
  mon_day="$mon.$day"
else
  # Um, does IFS actually matter for this?!?
  mon_day=$(date -d "${ago}" +%m.%d)
fi

OIFS="${IFS}"
IFS=_ when=$(date -d "${ago}" '+%Y %b %e %H')
IFS="${OIFS}"
ts=$(date -d "${ago}" +%s)

f="/logdata/Hosts/${hostname}/${mon_day}-local0*"
if [[ $f =~ bz2 ]]
then
  grep=bzgrep
else
  grep=grep
fi

curhost=host.example.com
bzgrep -h "${when}.*Compiled catalog for" $f | awk '{print $13, $15}' | sort | while read host secs
do
  if [[ "$host" != "$curhost" ]]
  then
    if [[ "$curhost" != "host.example.com" ]]
    then
      echo "p=/${curhost}/puppet/time/compile${sep}t=GAUGE${sep}i=3600${sep}ts=${ts}${sep}v=${total_secs}"
    fi
    total_secs=$secs
    curhost=$host
  else
    total_secs=$(echo "$total_secs + $secs" | bc -ql)
  fi
done | /usr/local/yaketystats/bin/${ysbin}/bivalve puppet compile_time

## You might like this script to bootstrap your stats:
##  #!/bin/bash
##  
##  ls /logdata/Hosts/$(hostname)/*local0*| sed -e 's|.*/0|0|' -e 's/-.*//' -e 's/[.]/ /' | while read mon day
##  do
##    for hour in 00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23
##    do
##      echo $mon, $day, $hour
##      ~/compile_time_grep $mon $day $hour >> /tmp/ctg
##    done
##  done


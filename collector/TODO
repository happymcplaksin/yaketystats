# Controller class needs to
#
# * Load puppet-friendly config files config.d style ><
# * Load plugin files
# * Initialize plugin instances
# * Write plugin/pipe output
# * Handle writing w/o locking and file switching
# * Open named pipe and read from it on a schedule
# * Do uploads on a schedule

# * Handle HUP / reload config
# ** means unschedule all and create new schedules for all
# * Handle plugin output including validation
# * Do uploads right now! signal
# * Handle plug{in,out}s.d/array.y

# Plugin improvements
#
# * Auto-add the first part of the path to be plugin.class.to_s.downcase OR:
# * You may want to override the path for a given plugin
# * Handle instances with naming an labels etc The monitoring-side of above
# * You may want to override the interval for an instance of a plugin
# * Do most gathering in #go and hand off structures to #stats and #monitor
# * Do monitoring stuff

# * Document the plugins in prep for rdoc/yard/w/e
# * Make io/fs ignore bcvs more completely
# * Move sys/dev masher out into library or something
# * Make io and cpu have LOD knobs
# * show blocked & running procs like current cpu-vmstat
# * right now exceptions, when running in daemon mode, go to the ether... figure out how to log them
# * What to do about snmp-lib-de-jour and nokogiri etc?

# libs
# * pidfile reader
# * fix Proctable to handle being passed 'self' to avoid lookups
# * Pick a place for "external" files to go and have some utility methods
# * utility method for mount table => either dm-devices or minor-nodes
